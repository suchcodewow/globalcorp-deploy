apiVersion: v1
kind: Namespace
metadata:
  name: dbic

#catalogdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogdb
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: catalogdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: catalogdb
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Database Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: catalogdb
          image: mysql
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
              name: catalogdb
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=catalogdb"
            - name: MYSQL_USER
              value: api
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: catalogDb

---
apiVersion: v1
kind: Service
metadata:
  name: catalogdb
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: catalogdb
spec:
  ports:
    - port: 3306
      targetPort: 3306
      name: catalogdb
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: catalogdb
  type: ClusterIP

#ordersdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ordersdb
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: ordersdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ordersdb
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Database Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: ordersdb
          image: "mcr.microsoft.com/mssql/server"
          imagePullPolicy: Always
          ports:
            - containerPort: 1433
              name: ordersdb
          env:
            - name: SA_PASSWORD
              value: "Password123"
            - name: ACCEPT_EULA
              value: "Y"

---
apiVersion: v1
kind: Service
metadata:
  name: ordersdb
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: ordersdb
spec:
  ports:
    - port: 1433
      targetPort: 1433
      name: ordersdb
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: ordersdb
  type: ClusterIP

#maindb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maindb
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: maindb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: maindb
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Database Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: maindb
          image: mongo
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
              name: maindb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"

---
apiVersion: v1
kind: Service
metadata:
  name: maindb
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: maindb
spec:
  ports:
    - port: 27017
      targetPort: 27017
      name: maindb
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: maindb
  type: ClusterIP

#catalogAPI
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogapi
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: catalogapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: catalogapi
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Services Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: catalogapi
          image: suchcodewow/dbic-catalogapi:instamation
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: catalogapi
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=catalogapi"

---
apiVersion: v1
kind: Service
metadata:
  name: catalogapi
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: catalogapi
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: catalogapi
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: catalogapi
  type: ClusterIP

#ordersapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ordersapi
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: ordersapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ordersapi
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Services Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: ordersapi
          image: suchcodewow/dbic-ordersapi:instamation
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: ordersapi
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=ordersapi"
            - name: DOTNET_ENVIRONMENT
              value: DockerDeploy

---
apiVersion: v1
kind: Service
metadata:
  name: ordersapi
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: ordersapi
spec:
  ports:
    - port: 8000
      targetPort: 8000
      name: ordersapi
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: ordersapi
  type: ClusterIP

#quotesapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quotesapi
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: quotesapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quotesapi
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Services Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: quotesapi
          image: suchcodewow/dbic-quotesapi:instamation
          imagePullPolicy: Always
          ports:
            - containerPort: 6100
              name: quotesapi
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=quotesapi"
            - name: DOTNET_ENVIRONMENT
              value: DockerDeploy

---
apiVersion: v1
kind: Service
metadata:
  name: quotesapi
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: quotesapi
spec:
  ports:
    - port: 6100
      targetPort: 6100
      name: quotesapi
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: quotesapi
  type: ClusterIP

#mainapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mainapi
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: mainapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mainapi
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Services Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: mainapi
          image: suchcodewow/dbic-mainapi:instamation
          imagePullPolicy: Always
          ports:
            - containerPort: 5100
              name: mainapi
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=mainapi"
            - name: dbHostName
              value: maindb
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: http/protobuf
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: https://<dynatraceURL>/api/v2/otlp/v1/traces
            - name: OTEL_EXPORTER_OTLP_HEADERS
              value: Authorization=Api-Token%20<dynatraceToken>
            - name: OTEL_SERVICE_NAME
              value: transactionAPI
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: none
            - name: OTEL_LOGS_EXPORTER
              value: none
            - name: OTEL_TRACES_SAMPLER
              value: "always_on"
---
apiVersion: v1
kind: Service
metadata:
  name: mainapi
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: mainapi
spec:
  ports:
    - port: 5100
      targetPort: 5100
      name: mainapi
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: mainapi
  type: ClusterIP

#specialtyapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: specialtyapi
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: specialtyapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: specialtyapi
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: Services Team
        chat-channel: dev-team-services
    spec:
      containers:
        - name: specialtyapi
          image: suchcodewow/dbic-specialtyapi:instamation
          imagePullPolicy: Always
          ports:
            - containerPort: 3666
              name: specialtyapi
          env:
            - name: DT_CUSTOM_PROP
              value: "project=dbic service=specialtyapi"
            - name: DATABASE_URL
              value: mongodb://root:password@maindb/specialty?authSource=admin
            - name: ESTIMATION_URL
              value: ""

---
apiVersion: v1
kind: Service
metadata:
  name: specialtyapi
  namespace: dbic
  labels:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: specialtyapi
spec:
  ports:
    - port: 3666
      targetPort: 3666
      name: specialtyapi
  selector:
    app.kubernetes.io/part-of: dbic
    app.kubernetes.io/name: specialtyapi
  type: ClusterIP

# loadgen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgen
  namespace: dbic
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dbic
      app.kubernetes.io/name: loadgen
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loadgen
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: dbic
        app.kubernetes.io/created-by: suchcodewow
      annotations:
        owner: QA
        chat-channel: qa-team
    spec:
      containers:
        - name: loadgen
          resources:
            requests:
              memory: "3000Mi"
              cpu: "500m"
            limits:
              memory: "3000Mi"
              cpu: "2200m"
          image: suchcodewow/dbic-loadgen:instamation
          imagePullPolicy: Always
          env:
            - name: frontendURL
              value: "ui"
            - name: runTotal
              value: "3000"
            - name: workers
              value: "3"
            - name: delay
              value: "30"
            - name: timeout
              value: "20000"
